name: Continuous Integration

on:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache: false

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Download dependencies
        run: go mod download

      - name: Run lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout 5m ./...

  integration:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache: false

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Download dependencies
        run: go mod download

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Running integration tests
        run: make test-integration
        continue-on-error: false
      # - name: Build and run integration tests
      #   run: |
      #     docker-compose -p tests -f docker/test-integration/docker-compose.yml up --build --abort-on-container-exit --exit-code-from tester || (echo "Tests failed. Showing logs:" && docker-compose -p tests -f docker/test-integration/docker-compose.yml logs)

      # - name: Clean up
      #   if: always()
      #   run: docker-compose -p tests -f docker/test-integration/docker-compose.yml down
